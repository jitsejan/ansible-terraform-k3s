---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: jupyter
  name: jupyter-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/jupyter"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: jupyter
  name: jupyterlab-pvc
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyterlab
  namespace: jupyter
  labels:
    name: jupyterlab
spec:
  replicas: 1
  selector:
    matchLabels:
      name: jupyterlab
  template:
    metadata:
      labels:
        name: jupyterlab
    spec:
      securityContext:
        runAsUser: 0
        fsGroup: 0
      containers:
        - name: jupyterlab
          image: jupyter/minimal-notebook:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8888
          command:
            - /bin/bash
            - -c
            - |
              "start.sh jupyter lab --LabApp.token='{{ user_password }}' --LabApp.ip='0.0.0.0' --LabApp.allow_root=True"
          volumeMounts:
            - name: jupyterlab-data
              mountPath: /home/jovyan
          resources:
            requests:
              memory: 500Mi
              cpu: 250m
      restartPolicy: Always
      volumes:
        - name: jupyterlab-data
          persistentVolumeClaim:
            claimName: jupyterlab-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter-service
  namespace: jupyter
  labels:
    name: jupyterlab
spec:
  ports:
    - name: http
      targetPort: 8888
      port: 80
      protocol: TCP
  selector:
    name: jupyterlab
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: jupyter
  name: jupyter-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - http:
        paths:
          - path: /jupyter
            pathType: Prefix
            backend:
              service:
                name: jupyter-service
                port:
                  name: http
