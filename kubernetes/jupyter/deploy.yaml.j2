---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: jupyter
  name: jupyter-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/jupyter"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: jupyter
  name: jupyter-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyter-notebook
  namespace: jupyter
  labels:
    app: jupyter-notebook
spec:
  replicas: 2
  selector:
    matchLabels:
      app: jupyter-notebook
  template:
    metadata:
      labels:
        app: jupyter-notebook
    spec:
      containers:
        - name: minimal-notebook
          image: jupyter/minimal-notebook:latest
          ports:
            - containerPort: 8888
          command: ["start-notebook.sh"]
          args: ["--NotebookApp.token={{ user_password }}"]
          volumeMounts:
            - name: jupyter-pv-storage
              mountPath: "/home/jovyan/work"
      initContainers:
        - name: jupyter-data-permission-fix
          image: busybox
          command: ["/bin/chmod", "-R", "777", "/mnt/jupyter"]
          volumeMounts:
            - name: jupyter-pv-storage
              mountPath: /mnt/jupyter
      volumes:
        - name: jupyter-pv-storage
          persistentVolumeClaim:
            claimName: jupyter-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  namespace: jupyter
  name: jupyter-service
spec:
  ports:
    - name: http
      port: 8888
      targetPort: 8888
  selector:
    app: jupyter-notebook
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: jupyter
  name: jupyter-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: "{{ 'http://jupyter.localhost' if ansible_distribution == 'MacOSX' else 'jupyter.jitsejan.com' }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jupyter-service
                port:
                  name: http
